server:
  port: 10010
spring:
  application:
    name: IDaaS

  cloud:
    nacos:
      config:
        enabled: false
      discovery:
        server-addr: xxx.xxx.xxx.xxx:8848
  mvc:
    servlet:
      path: /api/IDaaS/v1

  mail:
    host: smtp.qq.com
    username: xxxxxx@qq.com
    password: xxxxxx
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

  # mysql
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: xxxxxxx
    url: jdbc:mysql://xxx.xxx.xxx.xxx:3306/IDaaS?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    type: com.zaxxer.hikari.HikariDataSource
  hikari:
    pool-name: Retail_HikariCP
    minimum-idle: 15 #最小空闲连接数量
    idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）
    maximum-pool-size: 25 #连接池最大连接数，默认是10
    auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true
    max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
    connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000
    connection-test-query: SELECT 1

    #  rabbitMq
  rabbitmq:
    host: xxx.xxx.xxx.xxx
    port: 5672
    username: xxxxxxx
    password: xxxxxxx

redis:
  sdk:
    config:
      host: xxx.xxx.xxx.xxx
      password: xxxxxxx
      port: 6379
      pool-size: 10
      min-idle-size: 5
      idle-timeout: 30000
      connect-timeout: 5000
      retry-attempts: 3
      retry-interval: 1000
      ping-interval: 60000
      keep-alive: true

# 微信公众号配置信息
# originalid：原始ID
# appid：个人AppID
# token：开通接口服务自定义设置
wx:
  config:
    originalid: xxxxxx
    appid: xxxxxx
    token: xxxxx

mybatis:
  mapper-locations: classpath:/mybatis/mapper/*.xml
  config-location:  classpath:/mybatis/config/mybatis-config.xml

# 日志
logging:
  level:
    root: info
  config: classpath:logback-spring.xml

# 线程池配置
thread:
  pool:
    executor:
      config:
        core-pool-size: 20
        max-pool-size: 50
        keep-alive-time: 5000
        block-queue-size: 5000
        policy: CallerRunsPolicy

jwt:
  secretKey: xxxxxx